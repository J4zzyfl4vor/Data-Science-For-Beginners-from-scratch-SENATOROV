"""Условия и циклы. Продолжение."""

# +
from typing import Iterable, Union

import numpy as np

x_1: int = 42  # зададим число

# и пропишем условия (не забывайте про двоеточие и отступ)
if x_1 < 10:
    print("Small")
elif x_1 < 100:
    print("Medium")
else:
    print("Large")

# +
# запросим число у пользователя
x_2: str = input("Введите число: ")

# преобразуем в тип int
x_3: int = int(x_2)

# и наконец классифицируем
if x_3 < 10:
    print("Small")
elif x_3 < 100:
    print("Medium")
else:
    print("Large")

# +
# запрашиваем число
y_1: str = input("Введите число: ")

# проверяем первое условие (не пустая ли строка), если оно выполняется
if len(y_1) != 0:

    # преобразуем в тип int
    y_2: int = int(y_1)

    # и классифицируем
    if y_2 < 10:
        print("Small")
    elif y_2 < 100:
        print("Medium")
    else:
        print("Large")

# в противном, говорим, что ввод пустой
else:
    print("Ввод пустой")

# +
z_1: int = 42

# если z больше 10 и одновременно меньше 100
if 10 < z_1 < 100:

    # у нас среднее число
    print("Medium")

# в противном случае оно либо маленькое либо большое
else:
    print("Small or Large")

# +
z_2: int = 2

# если z меньше 10 или больше 100
if z_2 < 10 or z_2 > 100:

    # оно либо маленькое либо большое
    print("Small or Large")

# в противном случае оно среднее
else:
    print("Medium")

# +
# можно проверить вхождение слова в строку
sentence: str = "To be, or not to be, that is the question"
word: str = "question"

if word in sentence:
    print("Слово найдено")

# +
# или отсутствие элемента в списке
number_list: list[int] = [2, 3, 4, 6, 7]
number: int = 5

if number not in number_list:
    print("Такого числа в списке нет")
# -

# возьмем очень простой словарь
d_5: dict[str, int] = {"apple": 3, "tomato": 6, "carrot": 2}

# вначале поищем яблоки среди ключей словаря
if "apple" in d_5:
    print("Нашлись")

# а затем посмотрим, нет ли числа 6 среди его значений
# с помощью метода .values()
if 6 in d_5.values():
    print("Есть")

# +
# поочередно выведем элементы списка
number_list_6: list[int] = [1, 2, 3]

# не забывая про двоеточие и отступ
for number in number_list_6:
    print(number)

# +
# создадим словарь, значениями которого будут списки из двух элементов
d_7: dict[str, list[Union[int, str]]] = {
    "apple": [3, "kg"],
    "tomato": [6, "pcs"],
    "carrot": [2, "kg"],
}

# затем создадим две переменные-контейнера и применим метод .items()
for key_1, value_1 in d_7.items():
    print(key_1, value_1)
# -

# возьмем только одну переменную и применим метод .values()
for value_2 in d_7.values():
    # значение представляет собой список, выведем его первый элемент с индексом [0]
    print(value_2[0])
# 3

# +
# создадим массив и поместим в переменную number_array
number_array: Iterable[int] = np.array([1, 2, 3])

# пройдемся по нему с помощью цикла for
for number in number_array:
    print(number)
# -

# предположим, что у нас есть следующая база данных клиентов
clients_5: dict[int, dict[str, Union[str, int]]] = {
    1: {"name": "Анна", "age": 24, "sex": "male", "revenue": 12000},
    2: {"name": "Илья", "age": 18, "sex": "female", "revenue": 8000},
}

# в первом цикле for поместим id и информацию о клиентах в переменные id и info
for client_id, info in clients_5.items():

    # выведем id клиента
    print("client ID: " + str(client_id))

    # во втором цикле возьмем информацию об этом клиенте (это тоже словарь)
    for key_s, value_s in info.items():

        # и выведем каждый ключ (название поля) и значение (саму информацию)
        print(key_s + ": " + str(value_s))

    # добавим пустую строку после того, как выведем информацию об одном клиенте
    print()

# создадим последовательность от 0 до 4
for i in range(5):
    print(i)

# от 1 до 5
for i in range(1, 6):
    print(i)

# и от 0 до 5 с шагом 2 (то есть будем выводить числа через одно)
for i in range(0, 6, 2):
    print(i)

# +
# # возьмем месяцы года
# months: list[str] = [
#     "Январь",
#     "Февраль",
#     "Март",
#     "Апрель",
#     "Май",
#     "Июнь",
#     "Июль",
#     "Август",
#     "Сентябрь",
#     "Октябрь",
#     "Ноябрь",
#     "Декабрь",
# ]
#
# # и продажи мороженого в тыс. рублей в каждый из месяцев
# sales: list[int] = [47, 75, 79, 94, 123, 209, 233, 214, 197, 130, 87, 55]

# задав последовательность через range(len()),
# for i in range(len(months)):
#
#     # мы можем вывести каждый из элементов обоих списков в одном цикле
#     print(months[i], sales[i])

# +
# создадим список
my_list: list[int] = [0, 1, 2, 3, 4]

# передадим его функции reversed() и
# выведем каждый из элементов списка с помощью цикла for
for i in reversed(my_list):
    print(i)
# -

for i in reversed(range(5)):
    print(i)

for i in range(4, 0, -1):
    print(i)

for i in range(4, -1, -1):
    print(i)

# +
# создадим последовательность от 0 до 4
r_1: range = range(5)

# отсортируем ее по убыванию
sorted_values = sorted(r_1, reverse=True)

# выведем элементы отсортированной последовательности
for i in sorted_values:
    print(i)

# +
# пусть дан список с днями недели
days_11: list[str] = [
    "Понедельник",
    "Вторник",
    "Среда",
    "Четверг",
    "Пятница",
    "Суббота",
    "Воскресенье",
]

# выведем индекс (i) и сами элементы списка (day)
for i, day in enumerate(days_11):
    print(i, day)
# -

# так же выведем индекс и элементы списка, но начнем с 1
for i, day in enumerate(days_11, 1):
    print(i, day)

# +
# зададим начальное значение счетчика
i_12: int = 0

# пока счетчик меньше трех
while i_12 < 3:

    # в каждом цикле будем выводить его текущее значение
    print("Текущее значение счетчика:  " + str(i_12))

    # внутри цикла не забудем "нарастить" счетчик
    i_12 += 1

    # и выведем новое значение
    print("Новое значение счетчика:    " + str(i_12))

    # добавим пустую строку
    print()

# +
i_13: int = 0

while i_13 < 3:
    print(i_13)
    i_13 += 1

# +
# вновь возьмем словарь clients
clients_14: dict[int, dict[str, Union[str, int]]] = {
    1: {"name": "Анна", "age": 24, "sex": "male", "revenue": 12000},
    2: {"name": "Илья", "age": 18, "sex": "female", "revenue": 8000},
}

# в цикле пройдемся по ключам и значениям словаря
for client_id, info in clients_14.items():

    # и выведем их
    print(client_id, info)

    # однако уже после первого исполнения цикла, прервем его
    break

# +
# зададим начальное значение счетчика
x_15: int = 6

# будем исполнять цикл пока x не равен нулю
while x_15 != 0:

    # выведем текущее значение счетчика
    print(x_15)

    # и уменьшим (!) его на 1
    x_15 -= 1

    # если значение счетчика станет равным 3, прервем цикл
    if x_15 == 3:
        break
# -

# с помощью функции range создадим последовательность от 1 до 10
for i in range(1, 11):

    # если остаток от деления на два не равен нулю (то есть число нечетное)
    if i % 2 != 0:

        # идем к следующему числу последовательности
        continue
    # в противном случае выводим число 
    print(i)

# +
# снова возьмем список с днями недели
days_16: list[str] = [
    "Понедельник",
    "Вторник",
    "Среда",
    "Четверг",
    "Пятница",
    "Суббота",
    "Воскресенье",
]

# и для простоты поместим слово "Понедельник" в переменную Monday
Monday = days_16[0]
print(f"{Monday} - день тяжелый")
